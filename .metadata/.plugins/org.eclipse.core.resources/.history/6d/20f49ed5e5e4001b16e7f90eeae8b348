package upeu.sisecad.grupo5.app.legajo.service.impl;

import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;


import upeu.sisecad.grupo5.app.legajo.dao.LegajoDao;
import upeu.sisecad.grupo5.app.legajo.entity.Capitulo;
import upeu.sisecad.grupo5.app.legajo.entity.Factor;
import upeu.sisecad.grupo5.app.legajo.entity.Formulario;
import upeu.sisecad.grupo5.app.legajo.entity.Item;
import upeu.sisecad.grupo5.app.legajo.entity.Legajo;
import upeu.sisecad.grupo5.app.legajo.service.LegajoService;

@Service
public class LegajoServiceImpl implements LegajoService {

	@Autowired
	private LegajoDao legajoDao;
	
	@Override
	@Transactional(readOnly = true)
	public List<Legajo> findAll() {
		return (List<Legajo>) legajoDao.findAll();
	}

	@Override
	@Transactional(readOnly = true)
	public Legajo findById(Integer id) {
		return legajoDao.findById(id).orElse(null);
	}

	@Override
	@Transactional
	public Legajo save(Legajo legajo) {
		return legajoDao.save(legajo);
	}

	@Override
	@Transactional
	public void deleteById(Integer id) {
		legajoDao.deleteById(id);
	}

	@Override
	public List<Capitulo> getCapitulos() {
		return legajoDao.getCapitulos();
	}

	@Override
	public Capitulo getCapituloById(Integer id) {
		return legajoDao.getCapituloById(id);
	}

	@Override
	public List<Factor> getFactorByIdCapitulo(Integer id) {
		return legajoDao.getFactorByIdCapitulo(id);
	}

	@Override
	public Map<String, Integer> getModuloSuma(Integer id) {

		return legajoDao.getModuloSuma(id);
	}

	@Override
	public List<Item> getFormulario(Integer id) {
		return legajoDao.getFormulario(id);
	}

	@Override
	public List<Map<String, Object>> getInfoFormulario(Integer id) {
		
		if(id == 1) {
			return legajoDao.queryGrados();
		} else {
			if(id == 2) {
				return legajoDao.queryTitulos();
			} else {
				if(id == 3) {
					return legajoDao.queryEspecializacion();
				} else {
					if(id == 4) {
						return legajoDao.queryEstudios();
					} else {
						if(id == 5) {
							return legajoDao.queryIdiomas();
						} else {
							return null;
						}
					}
				}
			}
		}
		
	}
	
	@Override
	public Integer maxIdFormulario() {
		return legajoDao.maxIdFormulario();
	}

	@Override
	public void addFormulario(Integer idFactor, Formulario form) {
		
		Integer maxIdFormulario = legajoDao.maxIdFormulario();
		Integer idFormulario = 0;
		
		if(maxIdFormulario == null) {
			idFormulario = 1;
		}else {
			idFormulario = maxIdFormulario+1;
		}
		
		if(idFactor == 1) {
			
			legajoDao.queryGrados(
					idFormulario,
					form.getIdItem(),
					form.getNoGrado(),
					form.getCentroEstudios(),
					form.getYears(),
					form.getUrlArchivo());
		}
		if(idFactor == 2) {
			legajoDao.queryTitulos(
					idFormulario,
					form.getIdItem(),
					form.getMencionTitulo(),
					form.getCentroEstudios(),
					form.getYears(),
					form.getUrlArchivo());
		}
		if(idFactor == 3) {
			legajoDao.queryEspecializacion(
					idFormulario,
					form.getIdItem(),
					form.getEspecialidad(),
					form.getCentroEstudios(),
					form.getYears(),
					form.getCreditos(), 
					form.getUrlArchivo());
		}
		if(idFactor == 4) {
			legajoDao.queryEstudios(
					idFormulario,
					form.getIdItem(),
					form.getPais(), 
					form.getYears(),
					form.getNoEstudios(),
					form.getCentroEstudios(),
					form.getCreditos(),
					form.getUrlArchivo());
		}
		if(idFactor == 5) {
			legajoDao.queryIdiomas(
					idFormulario,
					form.getIdItem(),
					form.getCentroEstudios(),
					form.getLenguaMaterna(),
					form.getIdioma(),
					form.getUnidad(),
					form.getUrlArchivo());
		}
		
	}

	@Override
	public void getPuntaje(Integer idFactor, Formulario form) {
		switch (idFactor) {
		case 1:
			List<Map<String, Object>> queryGrados = legajoDao.queryGrados();
			
			System.out.println("Size: "+queryGrados.size());
			
			if(queryGrados.size() == 0) {
				
				System.out.println("vacio");
				Integer puntaje = legajoDao.queryPuntos(form.getIdItem());
				Integer a単os = form.getYears();
				Integer result = puntaje * a単os;
				System.out.println("Result: "+result);
				
				try {
					
					legajoDao.queryInsertPuntaje(result);
					
				} catch (Exception e) {
					System.out.print("Error 0 :V");
					List<Map<String, Integer>> list = legajoDao.queryList(result);
					System.out.println("0: "+list.get(0).get("id_t_puntaje"));
					System.out.println("1: "+list.get(1).get("id_t_puntaje"));
					System.out.println("2: "+list.get(2).get("id_t_puntaje"));
					
					for(int index = 0; index<list.size(); index++) {
						Integer element = list.get(index).get("id_t_puntaje");
						if(element == 1) {
							System.out.println("Entrando a la 1.");
							Integer id1 = legajoDao.maxTipoPuntaje1();
							Integer idformulario = legajoDao.maxIdFormulario();
							try {
								legajoDao.queryInsertFormularioPuntaje(idformulario, id1, idFactor);
							} catch (Exception e2) {
								System.out.print("Error1 :V");
								
							}
						} else if(element == 2) {
							Integer id2 = legajoDao.maxTipoPuntaje2();
							System.out.println("id2: "+id2);
							try {
								legajoDao.queryInsertFactorPuntaje(idFactor, id2);
							} catch (Exception e3) {
								System.out.print("Error2 :V");
							}
							
						} else if(element == 3) {
							Integer id3 = legajoDao.maxTipoPuntaje3();
							try {
								legajoDao.queryInsertCapituloPuntaje(null, 1, id3);
							} catch (Exception e4) {
								System.out.print("Error3 :V");
							}
						}
						
						System.out.println("Element: "+element);
						
					}
				}
				
			}else {
				Integer puntaje = legajoDao.queryPuntos(form.getIdItem());
				Integer a単os = form.getYears();
				Integer result = puntaje * a単os;
				System.out.println("ResultadoElse: "+result);
				try {
					
					legajoDao.queryInsertPuntajeElse(result);
					
				} catch (Exception e) {
					Integer idformulario = legajoDao.maxIdFormulario();
					Integer idpuntaje = legajoDao.maxTipoPuntaje();
					Integer idfactor = idFactor;
					try {
						legajoDao.queryInsertFormularioPuntaje(idformulario, idpuntaje, idfactor);
					} catch (Exception e2) {
						System.out.print("Error2 :V");
					}
				}
				
			}
			
			break;
			
		case 2:
			legajoDao.queryTitulos();
			break;
			
		case 3:
			legajoDao.queryEspecializacion();
			break;
			
		case 4:
			legajoDao.queryEstudios();
			break;
			
		case 5:
			legajoDao.queryIdiomas();
			break;
			
		default:
			break;
		}
	}

}

